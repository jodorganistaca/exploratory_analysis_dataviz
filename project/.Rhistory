posNation <- players %>% select(Pos, Nation)
posNation$Pos[players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"] <- "DF"
posNation$Pos[players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"] <- "MF"
posNation$Pos[players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"] <- "FW"
posNation$Pos[players$Pos == "GK" | players$Pos == "GKMF" ] <- "GK"
nationFrequency <- posNation %>% group_by(Nation) %>% summarise(total_count=n())
nationFrequency <- nationFrequency[order(-nationFrequency$total_count),]
topTenNation <- filter(posNation,Nation %in% nationFrequency$Nation[1:10])
posByNation <- topTenNation %>% group_by(Pos,Nation) %>% summarise(total_count=n())
posByNation <- topTenNation[order(-posByNation$total_count),]
ggplot(posByNation, aes(fill=Pos, y=total_count, x=Nation)) + geom_bar(position="fill", stat="identity")+ ggtitle("Type of Position by Nation")
library(plotly)
allPlayersCorr <- players %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
forwardsCorr <- forwards %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
defendersCorr <- defenders %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
midfieldersCorr <- midfielders %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
goalKeepersCorr <- goal_keepers %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
par(mfrow=c(2,2))
ggcorr(allPlayersCorr, method = c("everything", "pearson")) + ggtitle("All players")
par(mfrow=c(4,1))
ggcorr(forwardsCorr, method = c("everything", "pearson")) + ggtitle("Forwards")
ggcorr(defendersCorr, method = c("everything", "pearson")) + ggtitle("Defender")
ggcorr(midfieldersCorr, method = c("everything", "pearson")) + ggtitle("Midfielders")
ggcorr(goalKeepersCorr, method = c("everything", "pearson")) + ggtitle("Goalkeeper")
knitr::opts_chunk$set(echo = TRUE)
players <- read.csv("./2021-2022_Football_Player_Stats.csv",sep=";")
players['Player'] = players['Player']
players['Nation'] = players['Nation']
players['Pos'] = players['Pos']
players['Squad'] = players['Squad']
players['Comp'] = players['Comp']
players['Age'] = players['Age']
players['MP'] = players['MP']
players['G.90'] = players['Goals']
players['G.Sh'] = players['G.Sh']
players['PKGoals'] = round(((players['ShoPK'] * players['Min']) / 90),0)
players['PKAttempted'] = round(((players['PKatt'] * players['Min']) / 90),0)
players['Goals_tot'] = round(((players['G.90'] * players['Min']) / 90),0)
players['Pass'] = round(((players['PasTotAtt'] * players['Min']) / 90),0)
players['PassCompleted'] = round(((players['PasTotCmp'] * players['Min']) / 90),0)
players['PassComp%'] = round(((players['PassCompleted'] / players['Pass']) * 100),2)
players['Assist'] = round(((players['Assists'] * players['Min']) / 90),0)
players['Cross'] = round(((players['PasCrs'] * players['Min']) / 90),0)
players['CrossCompleted'] = round(((players['CrsPA'] * players['Min']) / 90),0)
players['CrossComp%'] = round(((players['CrossCompleted'] / players['Cross']) * 100),2)
players['Tackle_Won'] = round(((players['TklWon'] * players['Min']) / 90),0)
players['SucDribble'] = round(((players['DriSucc'] * players['Min']) / 90),0)
players['Dribble'] = round(((players['DriAtt'] * players['Min']) / 90),0)
players['DribbleComp%'] = round(((players['SucDribble'] / players['Dribble']) * 100),2)
players['YCards'] = round(((players['CrdY'] * players['Min']) / 90),0)
players['RCards'] = round(((players['CrdR'] * players['Min']) / 90),0)
players['Fls'] = round(((players['Fls'] * players['Min']) / 90),0)
players['Fld'] = round(((players['Fld'] * players['Min']) / 90),0)
players['OGoals'] = round(((players['OG'] * players['Min']) / 90),0)
players['AerWon'] = round(((players['AerWon'] * players['Min']) / 90),0)
players['AerLost'] = round(((players['AerLost'] * players['Min']) / 90),0)
players['AerWon%'] = round(((players['AerWon'] / (players['AerWon'] + players['AerLost'])) * 100),2)
players['TouAtt3rd'] = round(((players['TouAtt3rd'] * players['Min']) / 90),0)
library(tidyverse)
library(ggrepel)
require("ggrepel")
head(players)
players[which.max(players$Goals_tot),]
by_goals <- players[order(-players$Goals_tot),]
by_goals
position = unique(players$Pos)
position
goal_keepers = players[which(players$Pos == "GK"),]
defenders = players[which(players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"),]
midfielders = players[which(players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"),]
forwards = players[which(players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"),]
bizard = players[which(players$Pos == "GKMF"),]
defenders <-defenders[order(-defenders$TouAtt3rd),]
defenders
library(hrbrthemes)
max(defenders$Press)
defenders %>% ggplot(aes(x=defenders$Rk,y=defenders$Goals_tot))+geom_point()
goal_keepers %>% ggplot(aes(x=goal_keepers$Rk,y=goal_keepers$Goals_tot))+geom_point()
midfielders %>% ggplot(aes(x=midfielders$Rk,y=midfielders$Goals_tot))+geom_point()
forwards %>% ggplot(aes(x=forwards$Rk,y=forwards$Goals_tot))+geom_point()
players  %>% group_by(Pos) %>% summarise(tot=mean(Goals_tot)) ->stata2
stata2 %>% ggplot(aes(x=Pos,y=tot, group=Pos, color=Pos))+geom_line()+ ggtitle("Number of goals by Pos")
forwards  %>% group_by(Goals_tot) %>% summarise(Freq=n()) ->stata2
stata2 %>% ggplot(aes(x=stata2$Freq,y=stata2$Goals_tot))+geom_point()
p <- stata2 %>%
ggplot( aes(x=stata2$Goals_tot, y=stata2$Freq)) +
geom_histogram() +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
p
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("ggrepel")
install.packages("hrbrthemes")
install.packages("Hmisc")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages("corrplot")
install.packages("tidyverse")
install.packages("hrbrthemes")
install.packages("viridis")
install.packages("gridExtra")
install.packages("plotly")
install.packages("car")
install.packages("cowplot")
install.packages("fmsb")
knitr::opts_chunk$set(echo = TRUE)
players <- read.csv("./2021-2022_Football_Player_Stats.csv",sep=";")
players['Player'] = players['Player']
players['Nation'] = players['Nation']
players['Pos'] = players['Pos']
players['Squad'] = players['Squad']
players['Comp'] = players['Comp']
players['Age'] = players['Age']
players['MP'] = players['MP']
players['G.90'] = players['Goals']
players['G.Sh'] = players['G.Sh']
players['PKGoals'] = round(((players['ShoPK'] * players['Min']) / 90),0)
players['PKAttempted'] = round(((players['PKatt'] * players['Min']) / 90),0)
players['Goals_tot'] = round(((players['G.90'] * players['Min']) / 90),0)
players['Pass'] = round(((players['PasTotAtt'] * players['Min']) / 90),0)
players['PassCompleted'] = round(((players['PasTotCmp'] * players['Min']) / 90),0)
players['PassComp%'] = round(((players['PassCompleted'] / players['Pass']) * 100),2)
players['Assist'] = round(((players['Assists'] * players['Min']) / 90),0)
players['Cross'] = round(((players['PasCrs'] * players['Min']) / 90),0)
players['CrossCompleted'] = round(((players['CrsPA'] * players['Min']) / 90),0)
players['CrossComp%'] = round(((players['CrossCompleted'] / players['Cross']) * 100),2)
players['Tackle_Won'] = round(((players['TklWon'] * players['Min']) / 90),0)
players['SucDribble'] = round(((players['DriSucc'] * players['Min']) / 90),0)
players['Dribble'] = round(((players['DriAtt'] * players['Min']) / 90),0)
players['DribbleComp%'] = round(((players['SucDribble'] / players['Dribble']) * 100),2)
players['YCards'] = round(((players['CrdY'] * players['Min']) / 90),0)
players['RCards'] = round(((players['CrdR'] * players['Min']) / 90),0)
players['Fls'] = round(((players['Fls'] * players['Min']) / 90),0)
players['Fld'] = round(((players['Fld'] * players['Min']) / 90),0)
players['OGoals'] = round(((players['OG'] * players['Min']) / 90),0)
players['AerWon'] = round(((players['AerWon'] * players['Min']) / 90),0)
players['AerLost'] = round(((players['AerLost'] * players['Min']) / 90),0)
players['AerWon%'] = round(((players['AerWon'] / (players['AerWon'] + players['AerLost'])) * 100),2)
players['TouAtt3rd'] = round(((players['TouAtt3rd'] * players['Min']) / 90),0)
library(tidyverse)
library(ggrepel)
require("ggrepel")
head(players)
players[which.max(players$Goals_tot),]
by_goals <- players[order(-players$Goals_tot),]
by_goals
position = unique(players$Pos)
position
goal_keepers = players[which(players$Pos == "GK"),]
defenders = players[which(players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"),]
midfielders = players[which(players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"),]
forwards = players[which(players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"),]
bizard = players[which(players$Pos == "GKMF"),]
defenders <-defenders[order(-defenders$TouAtt3rd),]
defenders
library(hrbrthemes)
max(defenders$Press)
defenders %>% ggplot(aes(x=defenders$Rk,y=defenders$Goals_tot))+geom_point()
goal_keepers %>% ggplot(aes(x=goal_keepers$Rk,y=goal_keepers$Goals_tot))+geom_point()
midfielders %>% ggplot(aes(x=midfielders$Rk,y=midfielders$Goals_tot))+geom_point()
forwards %>% ggplot(aes(x=forwards$Rk,y=forwards$Goals_tot))+geom_point()
players  %>% group_by(Pos) %>% summarise(tot=mean(Goals_tot)) ->stata2
stata2 %>% ggplot(aes(x=Pos,y=tot, group=Pos, color=Pos))+geom_line()+ ggtitle("Number of goals by Pos")
forwards  %>% group_by(Goals_tot) %>% summarise(Freq=n()) ->stata2
stata2 %>% ggplot(aes(x=stata2$Freq,y=stata2$Goals_tot))+geom_point()
p <- stata2 %>%
ggplot( aes(x=stata2$Goals_tot, y=stata2$Freq)) +
geom_histogram() +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
p
library(gridExtra)
grid.arrange(bp1, bp2, bp3, bp4, bp5, bp6, ncol=2, nrow =3)
defenders  %>% group_by(Goals_tot) %>% summarise(Freq=n()) -> defenders_by_Goals
ggplot(mtcars, aes(x=as.factor(Goals_tot), fill=as.factor(Goals_tot) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
library(Hmisc)
describe(defenders$Goals_tot)
describe(midfielders$Goals_tot)
describe(goal_keepers$Goals_tot)
describe(forwards$Goals_tot)
library(GGally)
library(corrplot)
defenders_ <- defenders %>% select(PresSucc, Press, Blocks, Err, Recov)
defenders_
forwards_ <- forwards %>% select(Goals_tot, Assists)
forwards_
cor(forwards_)
ggpairs(defenders_, title="correlogram with ggpairs()")
pairs(defenders_)
library(tidyverse)
library(hrbrthemes)
library(viridis)
data <- players %>% select(Pos, Goals_tot, PresSucc, GCA, Blocks, Err, Recov)
data$Pos[players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"] <- "DF"
data$Pos[players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"] <- "MF"
data$Pos[players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"] <- "FW"
data$Pos[players$Pos == "GK" | players$Pos == "GKMF" ] <- "GK"
data
# Boxplot by category
bp1 <- ggplot(data,  aes(x=Pos, y=Goals_tot, fill=Pos)) + geom_boxplot()
bp2 <- ggplot(data,  aes(x=Pos, y=PresSucc, fill=Pos)) + geom_boxplot()
bp3 <- ggplot(data,  aes(x=Pos, y=GCA, fill=Pos)) + geom_boxplot()
bp4 <- ggplot(data,  aes(x=Pos, y=Blocks, fill=Pos)) + geom_boxplot()
bp5 <- ggplot(data,  aes(x=Pos, y=Err, fill=Pos)) + geom_boxplot()
bp6 <- ggplot(data,  aes(x=Pos, y=Recov, fill=Pos)) + geom_boxplot()
library(gridExtra)
grid.arrange(bp1, bp2, bp3, bp4, bp5, bp6, ncol=2, nrow =3)
bp1 <- ggplot(data,  aes(x=Nation, y=Goals_tot, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
bp3
data <- players %>% select(Pos, Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT., PasTotCmp., TklDri.,Press., DriSucc., Rec., `AerWon%`)
data$Pos[players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"] <- "DF"
data$Pos[players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"] <- "MF"
data$Pos[players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"] <- "FW"
data$Pos[players$Pos == "GK" | players$Pos == "GKMF" ] <- "GK"
data
bp1 <- ggplot(data,  aes(x=Pos, y=Goals_tot, fill=Pos)) + geom_boxplot()
bp2 <- ggplot(data,  aes(x=Pos, y=PresSucc, fill=Pos)) + geom_boxplot()
bp3 <- ggplot(data,  aes(x=Pos, y=GCA, fill=Pos)) + geom_boxplot()
bp4 <- ggplot(data,  aes(x=Pos, y=Blocks, fill=Pos)) + geom_boxplot()
bp5 <- ggplot(data,  aes(x=Pos, y=Err, fill=Pos)) + geom_boxplot()
bp6 <- ggplot(data,  aes(x=Pos, y=Recov, fill=Pos)) + geom_boxplot()
bp7 <- ggplot(data,  aes(x=Pos, y=SoT., fill=Pos)) + geom_boxplot()
bp8 <- ggplot(data,  aes(x=Pos, y=PasTotCmp., fill=Pos)) + geom_boxplot()
bp9 <- ggplot(data,  aes(x=Pos, y=TklDri., fill=Pos)) + geom_boxplot()
bp10 <- ggplot(data,  aes(x=Pos, y=Press., fill=Pos)) + geom_boxplot()
bp11 <- ggplot(data,  aes(x=Pos, y=DriSucc., fill=Pos)) + geom_boxplot()
bp12 <- ggplot(data,  aes(x=Pos, y=Rec., fill=Pos)) + geom_boxplot()
bp13 <- ggplot(data,  aes(x=Pos, y=`AerWon%`, fill=Pos)) + geom_boxplot()
bp1
bp7
bp8
bp9
bp10
bp11
bp12
bp13
data <- forwards %>% select(Nation, Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT., PasTotCmp., TklDri.,Press., DriSucc., Rec., `AerWon%`)
data_ <- data %>% group_by(Nation) %>% summarise(total_count=n())
data_ <- data_[order(-data_$total_count),]
my_second_df <- filter(data,Nation %in% data_$Nation[1:10])
vp1 <- ggplot(my_second_df,  aes(x=Nation, y=Goals_tot, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp2 <- ggplot(my_second_df,  aes(x=Nation, y=PresSucc, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp3 <- ggplot(my_second_df,  aes(x=Nation, y=GCA, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp4 <- ggplot(my_second_df,  aes(x=Nation, y=Blocks, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp5 <- ggplot(my_second_df,  aes(x=Nation, y=Err, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp7 <- ggplot(my_second_df,  aes(x=Nation, y=SoT., fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp8 <- ggplot(my_second_df,  aes(x=Nation, y=PasTotCmp., fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp9 <- ggplot(my_second_df,  aes(x=Nation, y=TklDri., fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp10 <- ggplot(my_second_df,  aes(x=Nation, y=Press., fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp11 <- ggplot(my_second_df,  aes(x=Nation, y=DriSucc., fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp12 <- ggplot(my_second_df,  aes(x=Nation, y=Rec., fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp13 <- ggplot(my_second_df,  aes(x=Nation, y=`AerWon%`, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp1
vp2
vp3
vp4
vp5
vp7
vp8
vp9
vp10
vp11
vp12
vp13
allPlayersCorr <- players %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT., PasTotCmp., TklDri.,Press., DriSucc., Rec., `AerWon%`)
forwardsCorr <- forwards %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT., PasTotCmp., TklDri.,Press., DriSucc., Rec., `AerWon%`)
defendersCorr <- defenders %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT., PasTotCmp., TklDri.,Press., DriSucc., Rec., `AerWon%`)
midfieldersCorr <- midfielders %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT., PasTotCmp., TklDri.,Press., DriSucc., Rec., `AerWon%`)
goalKeepersCorr <- goal_keepers %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT., PasTotCmp., TklDri.,Press., DriSucc., Rec., `AerWon%`)
ggcorr(allPlayersCorr, method = c("everything", "pearson"))
ggcorr(forwardsCorr, method = c("everything", "pearson"))
ggcorr(defendersCorr, method = c("everything", "pearson"))
ggcorr(midfieldersCorr, method = c("everything", "pearson"))
ggcorr(goalKeepersCorr, method = c("everything", "pearson"))
library(plotly)
allPlayersCorr <- players %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
forwardsCorr <- forwards %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
defendersCorr <- defenders %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
midfieldersCorr <- midfielders %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
goalKeepersCorr <- goal_keepers %>% select(Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, DriAtt, RecTarg, TouAttPen,CPA)
par(mfrow=c(2,2))
ggcorr(allPlayersCorr, method = c("everything", "pearson")) + ggtitle("All players")
par(mfrow=c(4,1))
ggcorr(forwardsCorr, method = c("everything", "pearson")) + ggtitle("Forwards")
ggcorr(defendersCorr, method = c("everything", "pearson")) + ggtitle("Defender")
ggcorr(midfieldersCorr, method = c("everything", "pearson")) + ggtitle("Midfielders")
ggcorr(goalKeepersCorr, method = c("everything", "pearson")) + ggtitle("Goalkeeper")
posNation <- players %>% select(Pos, Nation)
posNation$Pos[players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"] <- "DF"
posNation$Pos[players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"] <- "MF"
posNation$Pos[players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"] <- "FW"
posNation$Pos[players$Pos == "GK" | players$Pos == "GKMF" ] <- "GK"
posByNation <- posNation %>% group_by(Pos,Nation) %>% summarise(total_count=n())
posByNation <- posByNation[order(-posByNation$total_count),]
MostFrequentNationByPos <- posByNation %>% group_by(Pos) %>% slice(1:5)
ggplot(MostFrequentNationByPos, aes(fill=MostFrequentNationByPos$Nation, y=MostFrequentNationByPos$total_count, x=MostFrequentNationByPos$Pos)) + geom_bar(position="dodge", stat="identity")
posNation <- players %>% select(Pos, Nation)
posNation$Pos[players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"] <- "DF"
posNation$Pos[players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"] <- "MF"
posNation$Pos[players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"] <- "FW"
posNation$Pos[players$Pos == "GK" | players$Pos == "GKMF" ] <- "GK"
nationFrequency <- posNation %>% group_by(Nation) %>% summarise(total_count=n())
nationFrequency <- nationFrequency[order(-nationFrequency$total_count),]
topTenNation <- filter(posNation,Nation %in% nationFrequency$Nation[1:10])
posByNation <- topTenNation %>% group_by(Pos,Nation) %>% summarise(total_count=n())
posByNation <- posByNation[order(-posByNation$total_count),]
ggplot(posByNation, aes(fill=Pos, y=total_count, x=Nation)) + geom_bar(position="fill", stat="identity")+ ggtitle("Type of Position by Nation")
nationalites = unique(players$Nation)
length(nationalites)
library(car)
defendersByAge <- defenders %>% select(Age, Tkl) %>% group_by(Age) %>% summarise(total_count=mean(Tkl))
defendersByAge <- filter(defendersByAge,defendersByAge$total_count > 0)
forwardsByAge <- forwards %>% select(Age, Goals_tot) %>% group_by(Age) %>% summarise(total_count=mean(Goals_tot))
forwardsByAge <- filter(forwardsByAge,forwardsByAge$total_count > 0)
midfieldersByAge <- midfielders %>% select(Age, PasAss) %>% group_by(Age) %>% summarise(total_count=mean(PasAss))
midfieldersByAge <- filter(midfieldersByAge,midfieldersByAge$total_count > 0)
goalKeepersByAge <- goal_keepers %>% select(Age, Clr) %>% group_by(Age) %>% summarise(total_count=mean(Clr))
goalKeepersByAge <- filter(goalKeepersByAge,goalKeepersByAge$total_count > 0)
p1 <- plot(defendersByAge$Age, defendersByAge$total_count, lwd=3, col=rgb(0.1,0.7,0.1,0.8), xlab="Age", ylab = "Tkl", main = "Tkl by Age") + lines(lowess(defendersByAge$Age,defendersByAge$total_count))
p2 <- plot(forwardsByAge$Age, forwardsByAge$total_count, lwd=3, col=rgb(0.1,0.7,0.1,0.8), xlab="Age", ylab = "Goals", main = "Goals by Age") + lines(lowess(forwardsByAge$Age,forwardsByAge$total_count))
p3 <- plot(midfieldersByAge$Age, midfieldersByAge$total_count, lwd=3, col=rgb(0.1,0.7,0.1,0.8), xlab="Age", ylab = "PasAss", main = "PasAss by Age") + lines(lowess(midfieldersByAge$Age,midfieldersByAge$total_count))
p4 <- plot(goalKeepersByAge$Age, goalKeepersByAge$total_count, lwd=3, col=rgb(0.1,0.7,0.1,0.8), xlab="Age", ylab = "Clr", main = "Clr by Age") + lines(lowess(goalKeepersByAge$Age,goalKeepersByAge$total_count))
library(cowplot)
plot_grid(p1, p2, p3, p4)
plot_list <- map(c(p1, p2, p3, p4),myplot)
install.packages('devtools')
devtools::install_github("ricardo-bion/ggradar")
ibrary(ggradar)
library(ggradar)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[3:8] <- as.data.frame(lapply(bestPlayers[3:8], min_max_norm))
library(ggradar)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[3:7] <- as.data.frame(lapply(bestPlayers[3:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mané', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbapp<e9>')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
library(ggradar)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mané', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbapp<e9>')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
library(ggradar)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mané', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbapp<e9>')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
library(ggradar)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mané', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbappe')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
library(ggradar)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mané', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbapp<e9>')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
data <- forwards %>% select(Nation, Goals_tot, PresSucc, GCA, Blocks, Err, Recov, SoT, PasTotCmp, TklDri,Press, DriSucc, Rec, AerWon)
data_ <- data %>% group_by(Nation) %>% summarise(total_count=n())
data_ <- data_[order(-data_$total_count),]
my_second_df <- filter(data,Nation %in% data_$Nation[1:10])
vp1 <- ggplot(my_second_df,  aes(x=Nation, y=Goals_tot, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp2 <- ggplot(my_second_df,  aes(x=Nation, y=PresSucc, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp3 <- ggplot(my_second_df,  aes(x=Nation, y=GCA, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp4 <- ggplot(my_second_df,  aes(x=Nation, y=Blocks, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp5 <- ggplot(my_second_df,  aes(x=Nation, y=Err, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp7 <- ggplot(my_second_df,  aes(x=Nation, y=SoT, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp8 <- ggplot(my_second_df,  aes(x=Nation, y=PasTotCmp, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp9 <- ggplot(my_second_df,  aes(x=Nation, y=TklDri, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp10 <- ggplot(my_second_df,  aes(x=Nation, y=Press, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp11 <- ggplot(my_second_df,  aes(x=Nation, y=DriSucc, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp12 <- ggplot(my_second_df,  aes(x=Nation, y=Rec, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp13 <- ggplot(my_second_df,  aes(x=Nation, y=`AerWon`, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
vp1
vp2
vp3
vp4
vp5
vp7
vp8
vp9
vp10
vp11
vp12
vp13
library(ggradar)
players$Player <- sub("<e9>*", "e", players$Player)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mané', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbapp<e9>')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
library(ggradar)
players$Player <- sub("<e9>*", "e", players$Player)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mané', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbappe>')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
library(ggradar)
players$Player <- sub("<e9>*", "e", players$Player)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mané', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbappe')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
library(ggradar)
players$Player <- sub("<e9>*", "e", players$Player)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Cristiano Ronaldo', 'Sadio Mane', 'Karim Benzema', 'Kevin De Bruyne', 'Kylian Mbappe')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
library(ggradar)
players$Player <- sub("<e9>*", "e", players$Player)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Sadio Mane', 'Karim Benzema', 'Kylian Mbappe')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
library(ggradar)
players$Player <- sub("<e9>*", "e", players$Player)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Sadio Mane', 'Kylian Mbappe')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
library(ggradar)
players$Player <- sub("<e9>*", "e", players$Player)
bestPlayers <- players %>% select(Player, Goals_tot, Assist, Dribble, Recov, Fls, Fld)
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
bestPlayersNorm <- bestPlayers
bestPlayersNorm[2:7] <- as.data.frame(lapply(bestPlayers[2:7], min_max_norm))
bestPlayersNames <- c('Lionel Messi', 'Sadio Mane', 'Kylian Mbappe')
bestPlayers <- filter(bestPlayersNorm,players$Player %in% bestPlayersNames & players$Goals_tot != 0)
bestPlayers
ggradar(bestPlayers)
