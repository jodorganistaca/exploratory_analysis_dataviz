knitr::opts_chunk$set(echo = TRUE)
players <- read.csv("./2021-2022_Football_Player_Stats.csv",sep=";")
players['Player'] = players['Player']
players['Nation'] = players['Nation']
players['Pos'] = players['Pos']
players['Squad'] = players['Squad']
players['Comp'] = players['Comp']
players['Age'] = players['Age']
players['MP'] = players['MP']
players['G.90'] = players['Goals']
players['G.Sh'] = players['G.Sh']
players['PKGoals'] = round(((players['ShoPK'] * players['Min']) / 90),0)
players['PKAttempted'] = round(((players['PKatt'] * players['Min']) / 90),0)
players['Goals_tot'] = round(((players['G.90'] * players['Min']) / 90),0)
players['Pass'] = round(((players['PasTotAtt'] * players['Min']) / 90),0)
players['PassCompleted'] = round(((players['PasTotCmp'] * players['Min']) / 90),0)
players['PassComp%'] = round(((players['PassCompleted'] / players['Pass']) * 100),2)
players['Assist'] = round(((players['Assists'] * players['Min']) / 90),0)
players['Cross'] = round(((players['PasCrs'] * players['Min']) / 90),0)
players['CrossCompleted'] = round(((players['CrsPA'] * players['Min']) / 90),0)
players['CrossComp%'] = round(((players['CrossCompleted'] / players['Cross']) * 100),2)
players['Tackle_Won'] = round(((players['TklWon'] * players['Min']) / 90),0)
players['SucDribble'] = round(((players['DriSucc'] * players['Min']) / 90),0)
players['Dribble'] = round(((players['DriAtt'] * players['Min']) / 90),0)
players['DribbleComp%'] = round(((players['SucDribble'] / players['Dribble']) * 100),2)
players['YCards'] = round(((players['CrdY'] * players['Min']) / 90),0)
players['RCards'] = round(((players['CrdR'] * players['Min']) / 90),0)
players['Fls'] = round(((players['Fls'] * players['Min']) / 90),0)
players['Fld'] = round(((players['Fld'] * players['Min']) / 90),0)
players['OGoals'] = round(((players['OG'] * players['Min']) / 90),0)
players['AerWon'] = round(((players['AerWon'] * players['Min']) / 90),0)
players['AerLost'] = round(((players['AerLost'] * players['Min']) / 90),0)
players['AerWon%'] = round(((players['AerWon'] / (players['AerWon'] + players['AerLost'])) * 100),2)
players['TouAtt3rd'] = round(((players['TouAtt3rd'] * players['Min']) / 90),0)
library(tidyverse)
library(ggrepel)
require("ggrepel")
head(players)
players[which.max(players$Goals_tot),]
by_goals <- players[order(-players$Goals_tot),]
by_goals
position = unique(players$Pos)
position
goal_keepers = players[which(players$Pos == "GK"),]
defenders = players[which(players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"),]
midfielders = players[which(players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"),]
forwards = players[which(players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"),]
bizard = players[which(players$Pos == "GKMF"),]
defenders <-defenders[order(-defenders$TouAtt3rd),]
defenders
library(hrbrthemes)
max(defenders$Press)
defenders %>% ggplot(aes(x=defenders$Rk,y=defenders$Goals_tot))+geom_point()
goal_keepers %>% ggplot(aes(x=goal_keepers$Rk,y=goal_keepers$Goals_tot))+geom_point()
midfielders %>% ggplot(aes(x=midfielders$Rk,y=midfielders$Goals_tot))+geom_point()
forwards %>% ggplot(aes(x=forwards$Rk,y=forwards$Goals_tot))+geom_point()
players  %>% group_by(Pos) %>% summarise(tot=mean(Goals_tot)) ->stata2
stata2 %>% ggplot(aes(x=Pos,y=tot, group=Pos, color=Pos))+geom_line()+ ggtitle("Number of goals by Pos")
forwards  %>% group_by(Goals_tot) %>% summarise(Freq=n()) ->stata2
stata2 %>% ggplot(aes(x=stata2$Freq,y=stata2$Goals_tot))+geom_point()
p <- stata2 %>%
ggplot( aes(x=stata2$Goals_tot, y=stata2$Freq)) +
geom_histogram() +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
p
bp3
library(gridExtra)
grid.arrange(bp1, bp2, bp3, bp4, bp5, bp6, ncol=2, nrow =3)
library(GGally)
library(corrplot)
defenders_ <- defenders %>% select(PresSucc, Press, Blocks, Err, Recov)
defenders_
forwards_ <- forwards %>% select(Goals_tot, Assists)
forwards_
cor(forwards_)
ggpairs(defenders_, title="correlogram with ggpairs()")
pairs(defenders_)
library(tidyverse)
library(hrbrthemes)
library(viridis)
data <- players %>% select(Pos, Goals_tot, PresSucc, GCA, Blocks, Err, Recov)
data$Pos[players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"] <- "DF"
data$Pos[players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"] <- "MF"
data$Pos[players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"] <- "FW"
data$Pos[players$Pos == "GK" | players$Pos == "GKMF" ] <- "GK"
data
# Boxplot by category
bp1 <- ggplot(data,  aes(x=Pos, y=Goals_tot, fill=Pos)) + geom_boxplot()
bp2 <- ggplot(data,  aes(x=Pos, y=PresSucc, fill=Pos)) + geom_boxplot()
bp3 <- ggplot(data,  aes(x=Pos, y=GCA, fill=Pos)) + geom_boxplot()
bp4 <- ggplot(data,  aes(x=Pos, y=Blocks, fill=Pos)) + geom_boxplot()
bp5 <- ggplot(data,  aes(x=Pos, y=Err, fill=Pos)) + geom_boxplot()
bp6 <- ggplot(data,  aes(x=Pos, y=Recov, fill=Pos)) + geom_boxplot()
library(gridExtra)
grid.arrange(bp1, bp2, bp3, bp4, bp5, bp6, ncol=2, nrow =3)
bp3
data <- forwards %>% select(Nation, Goals_tot, PresSucc, GCA, Blocks, Err, Recov)
data
bp1 <- ggplot(data,  aes(x=Nation, y=Goals_tot, fill=Nation)) + geom_violin(width=1.4) + geom_boxplot(width=0.1, color="grey", alpha=0.2)
data
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
athletes_earnings <- read.csv("./forbesathletesv2.csv",sep=",")
earnings_by_sport <- aggregate(athletes_earnings$Earnings, by=list(Sport=athletes_earnings$Sport), FUN=sum)
data <- data.frame(
group=earnings_by_sport$Sport,
value=earnings_by_sport$x
)
ggplot(data, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
players <- read.csv("./2021-2022_Football_Player_Stats.csv",sep=";")
players['Player'] = players['Player']
players['Nation'] = players['Nation']
players['Pos'] = players['Pos']
players['Squad'] = players['Squad']
players['Comp'] = players['Comp']
players['Age'] = players['Age']
players['MP'] = players['MP']
players['G.90'] = players['Goals']
players['G.Sh'] = players['G.Sh']
players['PKGoals'] = round(((players['ShoPK'] * players['Min']) / 90),0)
players['PKAttempted'] = round(((players['PKatt'] * players['Min']) / 90),0)
players['Goals_tot'] = round(((players['G.90'] * players['Min']) / 90),0)
players['Pass'] = round(((players['PasTotAtt'] * players['Min']) / 90),0)
players['PassCompleted'] = round(((players['PasTotCmp'] * players['Min']) / 90),0)
players['PassComp%'] = round(((players['PassCompleted'] / players['Pass']) * 100),2)
players['Assist'] = round(((players['Assists'] * players['Min']) / 90),0)
players['Cross'] = round(((players['PasCrs'] * players['Min']) / 90),0)
players['CrossCompleted'] = round(((players['CrsPA'] * players['Min']) / 90),0)
players['CrossComp%'] = round(((players['CrossCompleted'] / players['Cross']) * 100),2)
players['Tackle_Won'] = round(((players['TklWon'] * players['Min']) / 90),0)
players['SucDribble'] = round(((players['DriSucc'] * players['Min']) / 90),0)
players['Dribble'] = round(((players['DriAtt'] * players['Min']) / 90),0)
players['DribbleComp%'] = round(((players['SucDribble'] / players['Dribble']) * 100),2)
players['YCards'] = round(((players['CrdY'] * players['Min']) / 90),0)
players['RCards'] = round(((players['CrdR'] * players['Min']) / 90),0)
players['Fls'] = round(((players['Fls'] * players['Min']) / 90),0)
players['Fld'] = round(((players['Fld'] * players['Min']) / 90),0)
players['OGoals'] = round(((players['OG'] * players['Min']) / 90),0)
players['AerWon'] = round(((players['AerWon'] * players['Min']) / 90),0)
players['AerLost'] = round(((players['AerLost'] * players['Min']) / 90),0)
players['AerWon%'] = round(((players['AerWon'] / (players['AerWon'] + players['AerLost'])) * 100),2)
players['TouAtt3rd'] = round(((players['TouAtt3rd'] * players['Min']) / 90),0)
library(tidyverse)
library(ggrepel)
require("ggrepel")
head(players)
players[which.max(players$Goals_tot),]
by_goals <- players[order(-players$Goals_tot),]
by_goals
position = unique(players$Pos)
position
goal_keepers = players[which(players$Pos == "GK"),]
defenders = players[which(players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"),]
midfielders = players[which(players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"),]
forwards = players[which(players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"),]
bizard = players[which(players$Pos == "GKMF"),]
defenders <-defenders[order(-defenders$TouAtt3rd),]
defenders
library(hrbrthemes)
max(defenders$Press)
defenders %>% ggplot(aes(x=defenders$Rk,y=defenders$Goals_tot))+geom_point()
goal_keepers %>% ggplot(aes(x=goal_keepers$Rk,y=goal_keepers$Goals_tot))+geom_point()
midfielders %>% ggplot(aes(x=midfielders$Rk,y=midfielders$Goals_tot))+geom_point()
forwards %>% ggplot(aes(x=forwards$Rk,y=forwards$Goals_tot))+geom_point()
players  %>% group_by(Pos) %>% summarise(tot=mean(Goals_tot)) ->stata2
stata2 %>% ggplot(aes(x=Pos,y=tot, group=Pos, color=Pos))+geom_line()+ ggtitle("Number of goals by Pos")
forwards  %>% group_by(Goals_tot) %>% summarise(Freq=n()) ->stata2
stata2 %>% ggplot(aes(x=stata2$Freq,y=stata2$Goals_tot))+geom_point()
p <- stata2 %>%
ggplot( aes(x=stata2$Goals_tot, y=stata2$Freq)) +
geom_histogram() +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
p
knitr::opts_chunk$set(echo = TRUE)
players <- read.csv("./2021-2022_Football_Player_Stats.csv",sep=";")
players['Player'] = players['Player']
players['Nation'] = players['Nation']
players['Pos'] = players['Pos']
players['Squad'] = players['Squad']
players['Comp'] = players['Comp']
players['Age'] = players['Age']
players['MP'] = players['MP']
players['G.90'] = players['Goals']
players['G.Sh'] = players['G.Sh']
players['PKGoals'] = round(((players['ShoPK'] * players['Min']) / 90),0)
players['PKAttempted'] = round(((players['PKatt'] * players['Min']) / 90),0)
players['Goals_tot'] = round(((players['G.90'] * players['Min']) / 90),0)
players['Pass'] = round(((players['PasTotAtt'] * players['Min']) / 90),0)
players['PassCompleted'] = round(((players['PasTotCmp'] * players['Min']) / 90),0)
players['PassComp%'] = round(((players['PassCompleted'] / players['Pass']) * 100),2)
players['Assist'] = round(((players['Assists'] * players['Min']) / 90),0)
players['Cross'] = round(((players['PasCrs'] * players['Min']) / 90),0)
players['CrossCompleted'] = round(((players['CrsPA'] * players['Min']) / 90),0)
players['CrossComp%'] = round(((players['CrossCompleted'] / players['Cross']) * 100),2)
players['Tackle_Won'] = round(((players['TklWon'] * players['Min']) / 90),0)
players['SucDribble'] = round(((players['DriSucc'] * players['Min']) / 90),0)
players['Dribble'] = round(((players['DriAtt'] * players['Min']) / 90),0)
players['DribbleComp%'] = round(((players['SucDribble'] / players['Dribble']) * 100),2)
players['YCards'] = round(((players['CrdY'] * players['Min']) / 90),0)
players['RCards'] = round(((players['CrdR'] * players['Min']) / 90),0)
players['Fls'] = round(((players['Fls'] * players['Min']) / 90),0)
players['Fld'] = round(((players['Fld'] * players['Min']) / 90),0)
players['OGoals'] = round(((players['OG'] * players['Min']) / 90),0)
players['AerWon'] = round(((players['AerWon'] * players['Min']) / 90),0)
players['AerLost'] = round(((players['AerLost'] * players['Min']) / 90),0)
players['AerWon%'] = round(((players['AerWon'] / (players['AerWon'] + players['AerLost'])) * 100),2)
players['TouAtt3rd'] = round(((players['TouAtt3rd'] * players['Min']) / 90),0)
library(tidyverse)
library(ggrepel)
require("ggrepel")
head(players)
players[which.max(players$Goals_tot),]
by_goals <- players[order(-players$Goals_tot),]
by_goals
position = unique(players$Pos)
position
goal_keepers = players[which(players$Pos == "GK"),]
defenders = players[which(players$Pos == "DF" | players$Pos == "DFMF" | players$Pos == "DFFW"),]
midfielders = players[which(players$Pos == "MF" | players$Pos == "MFFW" | players$Pos == "MFDF"),]
forwards = players[which(players$Pos == "FW" | players$Pos == "FWMF" | players$Pos == "FWDF"),]
bizard = players[which(players$Pos == "GKMF"),]
defenders <-defenders[order(-defenders$TouAtt3rd),]
defenders
library(hrbrthemes)
max(defenders$Press)
defenders %>% ggplot(aes(x=defenders$Rk,y=defenders$Goals_tot))+geom_point()
goal_keepers %>% ggplot(aes(x=goal_keepers$Rk,y=goal_keepers$Goals_tot))+geom_point()
midfielders %>% ggplot(aes(x=midfielders$Rk,y=midfielders$Goals_tot))+geom_point()
forwards %>% ggplot(aes(x=forwards$Rk,y=forwards$Goals_tot))+geom_point()
players  %>% group_by(Pos) %>% summarise(tot=mean(Goals_tot)) ->stata2
stata2 %>% ggplot(aes(x=Pos,y=tot, group=Pos, color=Pos))+geom_line()+ ggtitle("Number of goals by Pos")
forwards  %>% group_by(Goals_tot) %>% summarise(Freq=n()) ->stata2
stata2 %>% ggplot(aes(x=stata2$Freq,y=stata2$Goals_tot))+geom_point()
p <- stata2 %>%
ggplot( aes(x=stata2$Goals_tot, y=stata2$Freq)) +
geom_histogram() +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
p
